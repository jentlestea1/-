<!-->

<-->
<op_list length="2">
  <op name="flywheel_set_speed" template_id="0">
      <template_data type="command_squence" name="set_speed_template0_data">
        <para_list length="6">
          <para occupied_by="constant">0xD3</para> 
          <para occupied_by="constant">2</para>
          <para occupied_by="computed" size="4" compute_id="0"></para>
          <para occupied_by="constant">0x5B</para>
          <para occupied_by="computed" size="3" compute_id="0"></para>
          <para occupied_by="checksum"></para>
        </para_list>
        <code_block_list length="1" name="compute">
          <code_block id="0">
            use{;}
            action{
              result = *(int*)para;
              result = result * 2 + 1; 
            }
          </code_block>
        </code_block_list>
      </template_data>
  </op>

  <op name="flywheel_receive" template_id="0">
      <template_data type="bytes_array_assembly" name="receive_template0_data">
        <para_list length="6">
          <para start="0" num_byte="4" postprocess_id="-1"></para> 
          <para start="4" num_byte="4" postprocess_id="-1"></para> 
          <para start="8" num_byte="3" postprocess_id="0"></para> 
          <para start="11" num_byte="3" postprocess_id="0"></para> 
          <para start="14" num_byte="1" postprocess_id="-1"></para> 
          <para start="15" num_byte="1" postprocess_id="-1"></para> 
        </para_list>
        <code_block name="precondition">
          use{;}
          action{
             if (bytes_arr[0] == 0x00){
                result = 1;
             }else{
                result = 0;
             }
          ;}
       </code_block>
       <code_block_list length="1" name="postprocess">
         <code_block id="0">
           use{float tmp;}
           action{
              tmp = asm_val; 
              tmp = tmp * 0.05;
              *(float*)var_addr = tmp;
           }
         </code_block>
       </code_block_list>         
     </template_data>
  </op>
</op_list>
